/*
    Sensity Pebble Expansion Board v1 for IFC6640 boards

    Reference:
    https://lqdwifi.atlassian.net/wiki/spaces/BBV5/pages/3253792/Design+information
*/

/*
    GPIO MAP
    --------
    GPIO0 : BLSP1_UART_TX TICKER_1_TXD
    GPIO1 : BLSP1_UART_RX TICKER_1_RXD
    GPIO2 : OUTPUT        USB_HUB_RESET_N
    GPIO3 : OUTPUT        ETH_RESET_N
    GPIO25: OUTPUT        EC25_WAKEUP_IN
    GPIO26: OUTPUT        EC25_DISABLE_N
    GPIO27: OUTPUT        EC25_RESET
    GPIO28: OUTPUT        EC25_PWRKEY
    GPIO45: BLSP3_UART_TX TICKER_2_TXD
    GPIO46: BLSP3_UART_RX TICKER_2_RXD
    GPIO47: INPUT         BOARD_ID_0
    GPIO48: OUTPUT        FT232R_RESET_N
    GPIO49: INPUT         EMERGENCY_N    (Button)
    GPIO50: OUTPUT        EMER_LED_R_CTL (LED)
    GPIO51: OUTPUT        EMER_LED_G_CTL (LED)
    GPIO52: INPUT         BOARD_ID_1
    GPIO81: BLSP5_UART_TX BATTERY_TXD
    GPIO82: BLSP5_UART_RX BATTERY_RXD
*/

/*
    Append Pebble Expansion Board GPIO setup to the "Top Level Mode Multiplexer" node from msm8996-pinctrl.dtsi

    These don't actually do anything unless they're activated from something else

    Reference documentation: Documentation/devicetree/bindings/pinctrl/qcom,msm8996-pinctrl.txt
    "pins"
        A list of pins that can be set to the same function

    "function"
        This is the alternative function of the pin.
        These are listed in the array msm8996_groups from drivers/pinctrl/qcom/pinctrl-msm8996.c
        Each line contains the pin number, and then the alternative functions available for that pin

    "drive-strength"
        Drive strength for the pin, in milliamps.

    "bias-disable", "bias-pull-down", "bias-pull-up"
        Should pin have a pull-up resistor or pull-down resistor?

    "output-high", "output-low"
        Default output state of pin
*/
&tlmm {
    pebble_expansion_board: pebble_expansion_board {
        /* UARTs */
        pex_pinctrl_blsp_uart1: pex_pinctrl_blsp_uart1 {
            mux    { pins = "gpio0", "gpio1"; function = "blsp_uart1"; };
            config { pins = "gpio0", "gpio1"; drive-strength = <2>; bias-disable; };
        };
        pex_pinctrl_blsp_uart3: pex_pinctrl_blsp_uart3 {
            mux    { pins = "gpio45", "gpio46"; function = "blsp_uart3"; };
            config { pins = "gpio45", "gpio46"; drive-strength = <2>; bias-disable; };
        };
        pex_pinctrl_blsp_uart5: pex_pinctrl_blsp_uart5 {
            mux    { pins = "gpio81", "gpio82"; function = "blsp_uart5"; };
            config { pins = "gpio81", "gpio82"; drive-strength = <2>; bias-disable; };
        };

        /* GPIO emergency button + emergency LEDs */
        pex_pinctrl_emergency_n: pex_emergency_n {
            mux    { pins = "gpio49"; function = "gpio"; };
            config { pins = "gpio49"; drive-strength = <2>; bias-disable; };
        };
        pex_pinctrl_emer_led_r_ctl: pex_emer_led_r_ctl {
            mux    { pins = "gpio50"; function = "gpio"; };
            config { pins = "gpio50"; drive-strength = <2>; bias-disable; output-high; };
        };
        pex_pinctrl_emer_led_g_ctl: pex_emer_led_g_ctl {
            mux    { pins = "gpio51"; function = "gpio"; };
            config { pins = "gpio51"; drive-strength = <2>; bias-disable; output-high; };
        };

        /* Chip reset lines */
        pex_pinctrl_usb_hub_reset_n: pex_usb_hub_reset_n {
            mux    { pins = "gpio2"; function = "gpio"; };
            config { pins = "gpio2"; drive-strength = <2>; bias-disable; output-high; };
        };
        pex_pinctrl_eth_reset_n: pex_eth_reset_n {
            mux    { pins = "gpio3"; function = "gpio"; };
            config { pins = "gpio3"; drive-strength = <2>; bias-disable; output-high; };
        };
        pex_pinctrl_ft232r_reset_n: pex_ft232r_reset_n {
            mux    { pins = "gpio48"; function = "gpio"; };
            config { pins = "gpio48"; drive-strength = <2>; bias-disable; output-high; };
        };

        /* Board ID inputs */
        pex_pinctrl_board_id_0: pex_board_id_0 {
            mux    { pins = "gpio47"; function = "gpio"; };
            config { pins = "gpio47"; drive-strength = <2>; bias-pull-down; };
        };
        pex_pinctrl_board_id_1: pex_board_id_1 {
            mux    { pins = "gpio52"; function = "gpio"; };
            config { pins = "gpio52"; drive-strength = <2>; bias-pull-down; };
        };
    };
};

&soc {
    /*
        Documentation/devicetree/bindings/leds/leds-gpio.txt
    */
    gpio_leds {
        compatible = "gpio-leds";
        pinctrl-names = "default";
        pinctrl-0 = <&pex_pinctrl_emer_led_r_ctl &pex_pinctrl_emer_led_g_ctl>;

        /*
            /sys/devices/soc/soc:gpio_leds/leds/emergency_led_red/brightness
        */
        emergency_led_red {
            gpios = <&tlmm 50 1>;
            label = "emergency_led_red";
            linux,default-trigger = "none";
        };

        /*
            /sys/devices/soc/soc:gpio_leds/leds/emergency_led_green/brightness
        */
        emergency_led_green {
            gpios = <&tlmm 51 1>;
            label = "emergency_led_green";
            linux,default-trigger = "none";
        };
    };

    /*
        Documentation/devicetree/bindings/gpio/gpio_keys.txt
        This extends the node from apq8096-sbc.dtsi
        (There can only be one instance of the gpio-keys node!)
    */
    gpio_keys {
        compatible = "gpio-keys";
        input-name = "gpio-keys";
        pinctrl-names = "tlmm_gpio_key_active", "tlmm_gpio_key_suspend";
        pinctrl-0 = <&pex_pinctrl_emergency_n>;
        pinctrl-1 = <&pex_pinctrl_emergency_n>;

        /*
            Generate a "PROG1" key event on the "gpio-keys" input device
        */
            label = "emergency_button";
            gpios = <&tlmm 49 1>;
            linux,input-type = <1>; // EV_KEY
            linux,code = <148>; // KEY_PROG1
            gpio-key,wakeup; // Wakeup the device if it's sleeping
            debounce-interval = <15>;
        };
    };

    /*
    UART hardware table
    -------------------

    Hardware | Clock domain | IRQ | Address    (Size)   | Comment
    ---------|--------------|-----|---------------------|------------
    BLSP1    | blsp1_uart1  | 107 | 0x0756F000 (0x1000) | pex_blsp_uart1
    BLSP2    | blsp1_uart2  | 108 | 0x07570000 (0x1000) | uartblsp1dm1 (msm8996.dtsi)
    BLSP3    | blsp1_uart3  | 109 | 0x07571000 (0x1000) | pex_blsp_uart3
    BLSP4    | blsp1_uart4  | 110 | 0x07572000 (0x1000) |
    BLSP5    | blsp1_uart5  | 111 | 0x07573000 (0x1000) | pex_blsp_uart5
    BLSP6    | blsp1_uart6  | 112 | 0x07574000 (0x1000) |
    ---------|--------------|-----|---------------------|
    BLSP7    | blsp2_uart1  | 113 | 0x075AF000 (0x1000) |
    BLSP8    | blsp2_uart2  | 114 | 0x075B0000 (0x1000) | uartblsp2dm1 (msm8996.dtsi) - Debug Console
    BLSP9    | blsp2_uart3  | 115 | 0x075B1000 (0x1000) |
    BLSP10   | blsp2_uart4  | 116 | 0x075B2000 (0x1000) |
    BLSP11   | blsp2_uart5  | 117 | 0x075B3000 (0x1000) |
    BLSP12   | blsp2_uart6  | 118 | 0x075B4000 (0x1000) | uart2 (msm8996.dtsi) - Bluetooth?
    */

    // "BLSP1"
    pex_blsp_uart1: serial@0756f000 {
        // Use the drivers/tty/serial/msm_serial_hs_lite.c driver
        compatible = "qcom,msm-lsuart-v14";

        // IO space for UART (see above table)
        reg = <0x0756f000 0x1000>;

        // Interrupt number for UART (see above table)
        interrupts = <0 107 0>;

        // Clock domains for UART (see above table)
        clock-names = "core_clk", "iface_clk";
        clocks = <&clock_gcc clk_gcc_blsp1_uart1_apps_clk>, <&clock_gcc clk_gcc_blsp1_ahb_clk>;

        // Pin control setup
        pinctrl-names = "default";
        pinctrl-0 = <&pex_pinctrl_blsp_uart1>;

        // GPIO setup only TXD and RXD (no RTS/CTS/etc)
        qcom,config-gpio = <2>;
        qcom,tx-gpio = <&tlmm 0 0>;
        qcom,rx-gpio = <&tlmm 1 0>;
        qcom,use-pm;

        // Engage!
        status = "ok";
    };

    // "BLSP3"
    pex_blsp_uart3: serial@07571000 {
        // Use the drivers/tty/serial/msm_serial_hs_lite.c driver
        compatible = "qcom,msm-lsuart-v14";

        // IO space for UART (see above table)
        reg = <0x07571000 0x1000>;

        // Interrupt number for UART (see above table)
        interrupts = <0 109 0>;

        // Clock domains for UART (see above table)
        clock-names = "core_clk", "iface_clk";
        clocks = <&clock_gcc clk_gcc_blsp1_uart3_apps_clk>, <&clock_gcc clk_gcc_blsp1_ahb_clk>;

        // Pin control setup
        pinctrl-names = "default";
        pinctrl-0 = <&pex_pinctrl_blsp_uart3>;

        // GPIO setup only TXD and RXD (no RTS/CTS/etc)
        qcom,config-gpio = <2>;
        qcom,tx-gpio = <&tlmm 45 0>;
        qcom,rx-gpio = <&tlmm 46 0>;
        qcom,use-pm;

        // Engage!
        status = "ok";
    };

    // BLSP5
    pex_blsp_uart5: serial@07573000 {
        // Use the drivers/tty/serial/msm_serial_hs_lite.c driver
        compatible = "qcom,msm-lsuart-v14";

        // IO space for UART (see above table)
        reg = <0x07573000 0x1000>;

        // Interrupt number for UART (see above table)
        interrupts = <0 111 0>;

        // Clock domains for UART (see above table)
        clock-names = "core_clk", "iface_clk";
        clocks = <&clock_gcc clk_gcc_blsp1_uart5_apps_clk>, <&clock_gcc clk_gcc_blsp1_ahb_clk>;

        // Pin control setup
        pinctrl-names = "default";
        pinctrl-0 = <&pex_pinctrl_blsp_uart5>;

        // GPIO setup only TXD and RXD (no RTS/CTS/etc)
        qcom,config-gpio = <2>;
        qcom,tx-gpio = <&tlmm 81 0>;
        qcom,rx-gpio = <&tlmm 82 0>;
        qcom,use-pm;

        // Engage!
        status = "ok";
    };
};

// Disable ttyHSL2
&uart2 {
    status = "disabled";
};

/ {
    aliases {
        // Ensure device node numbering is consistent
        serial1 = &pex_blsp_uart1;
        serial2 = &pex_blsp_uart3;
        serial3 = &pex_blsp_uart5;
    };
};
